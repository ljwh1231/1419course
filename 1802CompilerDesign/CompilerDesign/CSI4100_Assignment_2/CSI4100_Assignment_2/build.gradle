apply plugin: 'java'

// Name and version (for the generated jar file):
archivesBaseName = 'MiniC'
version = 'Parser'

jar {
  manifest {
    attributes 'Implementation-Title': 'MiniC Assignment 2',
               'Implementation-Version': version,
               'Main-Class': 'MiniC.MiniC' // Class with the main method.
  }
}

compileJava {

    //enable compilation in a separate daemon process:
    options.fork = true

    //enable incremental compilation:
    options.incremental = true

}

//into 'build/classes/main/MiniC'
task copyClassfilesNoScanner(type: Copy) {
    into 'build/classes/java/main/MiniC'
    from 'resources/MiniC.class'
    into('Scanner') {
        from 'resources/Scanner/Scanner.class'
    }
}

task jarNoScanner(dependsOn: [
  'jar',
  'copyClassfilesNoScanner'
])

task compile(dependsOn: ['compileJava'])

task compileNoScanner(dependsOn: [
  'compileJava',
  'copyClassfilesNoScanner'
])

copyClassfilesNoScanner.mustRunAfter compileJava

sourceSets {
  main {
    java {
      srcDirs = ['MiniC']
    }
  }
}

// creates the gradle wrapper scripts for Unix and Windows:
task wrapper(type: Wrapper) {
  gradleVersion = '4.2'
}
